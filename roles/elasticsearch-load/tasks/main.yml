---
- name: Pull elasticsearch image
  docker_image:
    name: "elasticsearch:2.4.1"

- name: "Ensure elasticsearch data directory exists at: {{elasticsearch_data_path}}"
  file: path="{{elasticsearch_data_path}}" state=directory

- name: Start elasticsearch container
  docker_container:
    name: elasticsearch-c
    image: elasticsearch
    state: started
    restart: true
    ports:
      - "9200:9200"
    volumes:
      - "{{elasticsearch_data_path}}:/usr/share/elasticsearch/data"
      #- "{{elasticsearch_config_path}}:/usr/share/elasticsearch/config"

- name: Copy importer source code
  synchronize: src="importer/" dest="{{docker_importer_path}}"

- name: Build importer image
  docker_image:
    path: "{{docker_importer_path}}"
    name: importer
    force: true

- name: Wait for elasticsearch
  uri:
    url: http://localhost:9200/
  register: elasticsearch_ping
  until: "elasticsearch_ping.get('json')"
  retries: 5
  delay: 10

- name: Ensure geonames index exists
  ignore_errors: yes
  uri:
    url: http://localhost:9200/geonames
    method: PUT

- name: Count items in geonames index
  uri:
    url: http://localhost:9200/geonames/_count
  register: geonames_count

- name: Start importer
  docker_container:
    name: importer-c
    image: importer
    state: started
    detach: false
    restart: true
    env:
      ELASTICSEARCH_HOST: "{{ansible_default_ipv4.address}}:9200"
  when: "geonames_count.json.count == 0"
  register: import_result

#- debug: var=import_result
